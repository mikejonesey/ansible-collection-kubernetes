global
{% if inventory_hostname not in groups['k8s'] %}
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

{% else %}
    log stdout format raw local0
{% endif %}
	daemon

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option http-server-close
	#option forwardfor       except 127.0.0.0/8
	option                  redispatch
	retries                 1
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          50s
    timeout server          50s
    timeout http-keep-alive 10s
    timeout check           10s
{% if inventory_hostname not in groups['k8s'] %}
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
{% endif %}

frontend front-tcp-{{ ha_loadbalancer_apiserver_lb_port }}
    mode tcp
    bind :{{ ha_loadbalancer_apiserver_lb_port }}
    option tcplog
    default_backend back-tcp-{{ ha_loadbalancer_apiserver_local_port }}

backend back-tcp-{{ ha_loadbalancer_apiserver_local_port }}
    mode tcp
    balance roundrobin

    option httpchk
    http-check connect ssl
    http-check send meth GET uri /healthz
    http-check expect status 200

{% for master_host in groups['k8s_master'] %}
    server  {{ master_host }} {{ hostvars[master_host]['ansible_ssh_host'] }}:{{ ha_loadbalancer_apiserver_local_port }} check verify none
{% endfor %}

listen stats
  bind :8888
  stats uri /
  mode http
  stats enable
  stats hide-version
  stats realm k8s
  stats auth example:example
