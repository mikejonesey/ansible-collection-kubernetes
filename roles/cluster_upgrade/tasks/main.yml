---
# tasks file for cluster_upgrade

- name: Get Node Version
  ansible.builtin.shell: |
    set -o pipefail
    kubeadm version | grep -o "GitVersion:\"v[0-9\.]*" | sed 's/.*v//'
  register: node_version
  changed_when: false

- name: Define Node Version
  ansible.builtin.set_fact:
    current_node_version: "{{ node_version.stdout }}"
    current_node_major: "{{ node_version.stdout | regex_replace('([0-9]*).*', '\\1') }}"
    current_node_minor: "{{ node_version.stdout | regex_replace('([0-9]*).([0-9]*).*', '\\2') }}"

- name: Define Version Support
  ansible.builtin.set_fact:
    unsupported_upgrade_version: "{{ current_node_major }}.{{ current_node_minor | int + 2 }}"
    minor_upgrade_version: "{{ current_node_major }}.{{ current_node_minor | int + 1 }}"
    desired_version: "{{ kubernetes_version | regex_replace('-.*', '') }}"

# Fail with message if desired version is > cluster version +1 minor
- name: Fail on unsuported upgrade
  ansible.builtin.fail:
    msg: skipping minor versions during upgrade is not supported
  when: "desired_version is version(unsupported_upgrade_version, '>')"

# If desired == cluster then print versions available
- name: Get Available Patches
  ansible.builtin.include_tasks: get-patches.yml
  when: >
    desired_version is version(current_node_version, '==') and
    inventory_hostname == hostvars[groups['k8s_master'][0]].inventory_hostname

# If desired > cluster < minor_upgrade
- name: Patch Version Upgrade
  ansible.builtin.set_fact:
    is_patch_upgrade: true
  when: >
    desired_version is version(current_node_version, '>') and
    desired_version is version(minor_upgrade_version, '<')

- name: Patch Version Upgrade
  ansible.builtin.debug:
    msg: "Upgrading to newer patch version {{ desired_version }} from {{ current_node_version }}"
  when: "is_patch_upgrade"

# If desired > is_minor_upgrade
- name: Minor Version Upgrade
  ansible.builtin.set_fact:
    is_minor_upgrade: true
  when: >
    desired_version is version(minor_upgrade_version, '>')

- name: Minor Version Upgrade
  ansible.builtin.debug:
    msg: "Upgrading to newer minor version {{ desired_version }} from {{ current_node_version }}"
  when: "is_minor_upgrade"

- name: Upgrade Kubernetes
  ansible.builtin.include_tasks: upgrade.yml
  when: "is_patch_upgrade or is_minor_upgrade"
