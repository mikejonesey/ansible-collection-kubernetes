{# -------------------------------------------------- #}
{# --- Create Full Secrets List --- #}
{# -------------------------------------------------- #}
{% set all_kubernetes_secrets = [] %}
{% for kubernetes_secret_list in kubernetes_secrets_lists %}
  {%- for kubernetes_secret in hostvars[inventory_hostname][kubernetes_secret_list] %}
    {%- set temp = all_kubernetes_secrets.append(kubernetes_secret) %}
  {%- endfor %}
{% endfor %}
{# -------------------------------------------------- #}
{# --- Get All Requested Namespaces from Lists --- #}
{# -------------------------------------------------- #}
{%- set all_namespaces = [] %}
{%- for kubernetes_secret in all_kubernetes_secrets %}
  {%- for namespace in kubernetes_secret.namespaces %}
    {%- set temp = all_namespaces.append(namespace) %}
  {%- endfor %}
{%- endfor %}
{# -------------------------------------------------- #}
{# --- Create Namespaces --- #}
{# -------------------------------------------------- #}
{% if kubernetes_secrets_create_missing_namespace %}
  {%- for unique_namespace in all_namespaces|sort|unique %}
    {%- if unique_namespace not in valid_namespaces %}
      {%- set temp = valid_namespaces.append(unique_namespace) %}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ unique_namespace }}

    {%- endif %}
  {%- endfor +%}
##################################################
# Updated Valid Namespaces:
# {{ valid_namespaces }}
##################################################
{% endif %}
{# -------------------------------------------------- #}
{# --- Create Secrets --- #}
{# -------------------------------------------------- #}
{% for kubernetes_secret in all_kubernetes_secrets %}
{% if kubernetes_secret.type == 'docker-registry' %}
{% for namespace in kubernetes_secret.namespaces %}
{% if namespace in valid_namespaces %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ kubernetes_secret.name }}
  namespace: {{ namespace }}
data:
  .dockerconfigjson: "{% include 'dockerconfig.yml.j2' %}"
type: kubernetes.io/dockerconfigjson
{% else %}
# Skipping {{ kubernetes_secret.name }}, missing namespace: {{ namespace }}
{% endif %}
{% endfor %}
{% elif kubernetes_secret.type == 'generic' %}
{% for namespace in kubernetes_secret.namespaces %}
{% if namespace in valid_namespaces %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ kubernetes_secret.name }}
  namespace: {{ namespace }}
data: {{ kubernetes_secret.data }}
type: Opaque
{% endif %}
{% endfor %}
{% elif kubernetes_secret.type == 'tls' %}
{% for namespace in kubernetes_secret.namespaces %}
{% if namespace in valid_namespaces %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ kubernetes_secret.name }}
  namespace: {{ namespace }}
data:
  tls.crt: |
{% filter indent(width=4) %}
    {{ kubernetes_secret.cert }}
{%- endfilter %}
  tls.key: |
{% filter indent(width=4) %}
    {{ kubernetes_secret.key }}
{%- endfilter %}
type: kubernetes.io/tls
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}