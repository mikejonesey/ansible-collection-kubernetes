{# --- Create Namespaces --- #}
{%- set all_namespaces = [] %}
{%- for kubernetes_secret in kubernetes_secrets %}
  {%- for namespace in kubernetes_secret.namespaces %}
    {%- set temp = all_namespaces.append(namespace) %}
  {%- endfor %}
{%- endfor %}
{% for unique_namespace in all_namespaces|sort|unique %}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ unique_namespace }}
{% endfor %}
{# --- Create Secrets --- #}
{% for kubernetes_secret in kubernetes_secrets %}
{% if kubernetes_secret.type == 'docker-registry' %}
{% for namespace in kubernetes_secret.namespaces %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ kubernetes_secret.name }}
  namespace: {{ namespace }}
data:
  .dockerconfigjson: "{% include 'dockerconfig.yml.j2' %}"
type: kubernetes.io/dockerconfigjson
{% endfor %}
{% elif kubernetes_secret.type == 'generic' %}
{% for namespace in kubernetes_secret.namespaces %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ kubernetes_secret.name }}
  namespace: {{ namespace }}
data: {{ kubernetes_secret.data }}
type: Opaque
{% endfor %}
{% elif kubernetes_secret.type == 'tls' %}
{% for namespace in kubernetes_secret.namespaces %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ kubernetes_secret.name }}
  namespace: {{ namespace }}
data:
  tls.crt: |
{% filter indent(width=4) %}
    {{ kubernetes_secret.cert }}
{% endfilter %}
  tls.key: |
{% filter indent(width=4) %}
    {{ kubernetes_secret.key }}
{% endfilter %}
type: kubernetes.io/tls
{% endfor %}
{% endif %}
{% endfor %}